프로그램 이름: Advanced user-level loader

Part1. Returning to the program loader
    궁극의 목적
        make a test program return to the loader
        (test program should not execute exit() syscall and should jump back to the loader instead.)
        (Your loader will confirm its return and exit with a proper message.)

    시작점(apager, dpager 둘 중 하나에서 시작)
        1. modify the test program :
        Implement a “return_to_loader” function in a test program. Test programs will be given. 
        You may need to recover a stack pointer of the loader before return to the loader.
        =>  The test program explicitly jumps to the loader instead of calling exit() system call.
        (This task is similar to how your loader loads ELF binary and jump.)
        (But, you should care for other registers such as
        the frame pointer register (e.g., rbp) and segment registers (e.g., cs, gs, fs, …) as well.)

        2. on your own.

Part2. Back-to-back loading
    궁극의 목적
        your loader is asked to execute more than two ELF binaries one by one
        ex) For example, suppose that two ELF files, A and B, are given to your loader. 
            Then, it executes A to its completion, and A returns to the loader. 
            the loader loads the second ELF, B. B also needs to return to the loader. 
            After your loader executes all ELF binaries, it terminates
    
    시작점
        없음

Part3. User-level threading
    궁극의 목적
        Execute multiple test programs at the same time.
    
    주의점
        1. Instead of using pthread, your loader will schedule test programs in a round-robin manner
        2. Test programs are given for this task(call yield function inside).
        3. Although it is called user-level threading, it is actually a single-threaded execution
        (The loader will load the multiple test programs at the same time 
        and schedule them one by one until the test program meets the yield function.)

    참고자료
        1. setjmp and longjmp system calls can be used
        what is setjmp and longjmp?: https://www.csl.mtu.edu/cs4411.ck/common/Coroutines.pdf
        setjmp: https://web.eecs.utk.edu/~huangj/cs360/360/notes/Setjmp/lecture.html